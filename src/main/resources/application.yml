spring:
  datasource:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/dev}
    username: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:root}
  jpa:
    hibernate:
      use-new-id-generator-mappings: false
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate.format_sql: true
  flyway:
    url: ${DATABASE_URL:jdbc:mysql://localhost:3306/dev}
    user: ${DATABASE_USERNAME:root}
    password: ${DATABASE_PASSWORD:root}
    locations: classpath:/db/migration
  redis:
    host: localhost
    port: 6379
  cache:
    type: redis
hystrix:
  threadpool:
    default:
      # Maximum number of concurrent requests when using thread pools (Default: 10)
      coreSize: 100
      # Maximum LinkedBlockingQueue size - -1 for using SynchronousQueue (Default: -1)
      maxQueueSize: -1
      # Queue size rejection threshold (Default: 5)
      queueSizeRejectionThreshold: 5
  command:
    default:
      circuitBreaker:
        sleepWindowInMilliseconds: 30000
        requestVolumeThreshold: 3
      execution:
        timeout:
          enabled: false
        isolation:
          #          strategy: SEMAPHORE, no thread pool but timeout handling stops to work
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 4000

project:
    version: @project.version@